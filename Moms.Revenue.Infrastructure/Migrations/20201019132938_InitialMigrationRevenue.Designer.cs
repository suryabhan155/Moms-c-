// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Moms.Revenue.Infrastructure.Persistence;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace Moms.Revenue.Infrastructure.Migrations
{
    [DbContext(typeof(RevenueContext))]
    [Migration("20201019132938_InitialMigrationRevenue")]
    partial class InitialMigrationRevenue
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn)
                .HasAnnotation("ProductVersion", "3.1.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("Moms.Revenue.Core.Domain.Billing.Models.BillingDiscount", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsPercentage")
                        .HasColumnType("boolean");

                    b.Property<decimal>("MaxDiscount")
                        .HasColumnType("numeric");

                    b.Property<decimal>("MinDiscount")
                        .HasColumnType("numeric");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<bool>("NeedsApproval")
                        .HasColumnType("boolean");

                    b.Property<bool>("Status")
                        .HasColumnType("boolean");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.Property<bool>("Void")
                        .HasColumnType("boolean");

                    b.Property<DateTime?>("VoidDate")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("Id");

                    b.ToTable("BillingDiscounts");
                });

            modelBuilder.Entity("Moms.Revenue.Core.Domain.Billing.Models.BillingType", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<Guid?>("PriceListId")
                        .HasColumnType("uuid");

                    b.Property<bool>("Status")
                        .HasColumnType("boolean");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.Property<bool>("Void")
                        .HasColumnType("boolean");

                    b.Property<DateTime?>("VoidDate")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("Id");

                    b.HasIndex("PriceListId");

                    b.ToTable("BillingTypes");
                });

            modelBuilder.Entity("Moms.Revenue.Core.Domain.Billing.Models.ClientBill", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("BillNumber")
                        .HasColumnType("text");

                    b.Property<decimal>("BillTotal")
                        .HasColumnType("numeric");

                    b.Property<DateTime>("BillingDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<Guid>("PatientId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.Property<bool>("Void")
                        .HasColumnType("boolean");

                    b.Property<DateTime?>("VoidDate")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("Id");

                    b.ToTable("ClientBills");
                });

            modelBuilder.Entity("Moms.Revenue.Core.Domain.Billing.Models.ClientBillPayment", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<decimal>("Amount")
                        .HasColumnType("numeric");

                    b.Property<Guid>("ClientBillingId")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<decimal>("DiscountedAmount")
                        .HasColumnType("numeric");

                    b.Property<Guid>("ItemMasterId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("ModuleId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("PaymentTypeId")
                        .HasColumnType("uuid");

                    b.Property<bool>("Status")
                        .HasColumnType("boolean");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.Property<bool>("Void")
                        .HasColumnType("boolean");

                    b.Property<DateTime?>("VoidDate")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("Id");

                    b.HasIndex("ItemMasterId");

                    b.HasIndex("ModuleId");

                    b.HasIndex("PaymentTypeId");

                    b.ToTable("ClientBillPayment");
                });

            modelBuilder.Entity("Moms.Revenue.Core.Domain.Billing.Models.ClientBillingItem", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("BillId")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<Guid>("ItemMasterId")
                        .HasColumnType("uuid");

                    b.Property<decimal>("Price")
                        .HasColumnType("numeric");

                    b.Property<Guid>("PriceListId")
                        .HasColumnType("uuid");

                    b.Property<decimal>("Quantity")
                        .HasColumnType("numeric");

                    b.Property<bool>("Status")
                        .HasColumnType("boolean");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.Property<bool>("Void")
                        .HasColumnType("boolean");

                    b.Property<DateTime?>("VoidDate")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("Id");

                    b.ToTable("ClientBillingItems");
                });

            modelBuilder.Entity("Moms.Revenue.Core.Domain.Billing.Models.PaymentType", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.Property<bool>("Void")
                        .HasColumnType("boolean");

                    b.Property<DateTime?>("VoidDate")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("Id");

                    b.ToTable("PaymentTypes");
                });

            modelBuilder.Entity("Moms.Revenue.Core.Domain.Billing.Models.PriceList", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("BillTypeId")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ClientBillingItemsId")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("EffectiveDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsDiscounted")
                        .HasColumnType("boolean");

                    b.Property<Guid>("ItemMasterId")
                        .HasColumnType("uuid");

                    b.Property<string>("ItemName")
                        .HasColumnType("text");

                    b.Property<Guid>("ModuleId")
                        .HasColumnType("uuid");

                    b.Property<decimal>("SellingPrice")
                        .HasColumnType("numeric");

                    b.Property<bool>("Status")
                        .HasColumnType("boolean");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.Property<bool>("Void")
                        .HasColumnType("boolean");

                    b.Property<DateTime?>("VoidDate")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("Id");

                    b.HasIndex("ClientBillingItemsId");

                    b.HasIndex("ItemMasterId")
                        .IsUnique();

                    b.HasIndex("ModuleId")
                        .IsUnique();

                    b.ToTable("PriceLists");
                });

            modelBuilder.Entity("Moms.Revenue.Core.Domain.Item.Models.ItemConfiguration", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("DispensingUnit")
                        .HasColumnType("text");

                    b.Property<Guid>("ItemMasterId")
                        .HasColumnType("uuid");

                    b.Property<int>("MaxStock")
                        .HasColumnType("integer");

                    b.Property<int>("MinStock")
                        .HasColumnType("integer");

                    b.Property<string>("PurchaseUnit")
                        .HasColumnType("text");

                    b.Property<decimal>("PurchaseUnitPrice")
                        .HasColumnType("numeric");

                    b.Property<string>("QuantityPerDispenseUnit")
                        .HasColumnType("text");

                    b.Property<decimal>("QuantityPerPurchaseUnit")
                        .HasColumnType("numeric");

                    b.Property<bool>("Status")
                        .HasColumnType("boolean");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.Property<bool>("Void")
                        .HasColumnType("boolean");

                    b.Property<DateTime?>("VoidDate")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("Id");

                    b.ToTable("ItemConfigurations");
                });

            modelBuilder.Entity("Moms.Revenue.Core.Domain.Item.Models.ItemMaster", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Abbreviation")
                        .HasColumnType("text");

                    b.Property<Guid?>("ClientBillingItemId")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("DisplayName")
                        .HasColumnType("text");

                    b.Property<string>("ItemCode")
                        .HasColumnType("text");

                    b.Property<Guid?>("ItemConfigurationId")
                        .HasColumnType("uuid");

                    b.Property<string>("ItemDescription")
                        .HasColumnType("text");

                    b.Property<Guid>("ItemSubTypeId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("ItemTypeId")
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<Guid>("Type")
                        .HasColumnType("uuid");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.Property<bool>("Void")
                        .HasColumnType("boolean");

                    b.Property<DateTime?>("VoidDate")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("Id");

                    b.HasIndex("ClientBillingItemId");

                    b.HasIndex("ItemConfigurationId");

                    b.ToTable("ItemMasters");
                });

            modelBuilder.Entity("Moms.Revenue.Core.Domain.Item.Models.ItemType", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<Guid?>("ItemMasterId")
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<bool>("Status")
                        .HasColumnType("boolean");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.Property<bool>("Void")
                        .HasColumnType("boolean");

                    b.Property<DateTime?>("VoidDate")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("Id");

                    b.HasIndex("ItemMasterId");

                    b.ToTable("ItemTypes");
                });

            modelBuilder.Entity("Moms.Revenue.Core.Domain.Item.Models.ItemTypeSubType", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<Guid?>("ItemMasterId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("ItemTypeId")
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<bool>("Status")
                        .HasColumnType("boolean");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.Property<bool>("Void")
                        .HasColumnType("boolean");

                    b.Property<DateTime?>("VoidDate")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("Id");

                    b.HasIndex("ItemMasterId");

                    b.HasIndex("ItemTypeId")
                        .IsUnique();

                    b.ToTable("ItemTypeSubTypes");
                });

            modelBuilder.Entity("Moms.Revenue.Core.Domain.Item.Models.Module", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("Status")
                        .HasColumnType("boolean");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.Property<bool>("Void")
                        .HasColumnType("boolean");

                    b.Property<DateTime?>("VoidDate")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("Id");

                    b.ToTable("Modules");
                });

            modelBuilder.Entity("Moms.Revenue.Core.Domain.Billing.Models.BillingType", b =>
                {
                    b.HasOne("Moms.Revenue.Core.Domain.Billing.Models.PriceList", "PriceList")
                        .WithMany()
                        .HasForeignKey("PriceListId");
                });

            modelBuilder.Entity("Moms.Revenue.Core.Domain.Billing.Models.ClientBillPayment", b =>
                {
                    b.HasOne("Moms.Revenue.Core.Domain.Item.Models.ItemMaster", "ItemMaster")
                        .WithMany("ClientBillPayments")
                        .HasForeignKey("ItemMasterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Moms.Revenue.Core.Domain.Item.Models.Module", "Module")
                        .WithMany("ClientBillPayments")
                        .HasForeignKey("ModuleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Moms.Revenue.Core.Domain.Billing.Models.PaymentType", "PaymentType")
                        .WithMany("ClientBillPayments")
                        .HasForeignKey("PaymentTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Moms.Revenue.Core.Domain.Billing.Models.PriceList", b =>
                {
                    b.HasOne("Moms.Revenue.Core.Domain.Billing.Models.ClientBillingItem", "ClientBillingItems")
                        .WithMany("PriceLists")
                        .HasForeignKey("ClientBillingItemsId");

                    b.HasOne("Moms.Revenue.Core.Domain.Item.Models.ItemMaster", null)
                        .WithOne("PriceList")
                        .HasForeignKey("Moms.Revenue.Core.Domain.Billing.Models.PriceList", "ItemMasterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Moms.Revenue.Core.Domain.Item.Models.Module", null)
                        .WithOne("PriceList")
                        .HasForeignKey("Moms.Revenue.Core.Domain.Billing.Models.PriceList", "ModuleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Moms.Revenue.Core.Domain.Item.Models.ItemMaster", b =>
                {
                    b.HasOne("Moms.Revenue.Core.Domain.Billing.Models.ClientBillingItem", null)
                        .WithMany("ItemMasters")
                        .HasForeignKey("ClientBillingItemId");

                    b.HasOne("Moms.Revenue.Core.Domain.Item.Models.ItemConfiguration", "ItemConfiguration")
                        .WithMany("ItemMasters")
                        .HasForeignKey("ItemConfigurationId");
                });

            modelBuilder.Entity("Moms.Revenue.Core.Domain.Item.Models.ItemType", b =>
                {
                    b.HasOne("Moms.Revenue.Core.Domain.Item.Models.ItemMaster", "ItemMaster")
                        .WithMany("ItemTypes")
                        .HasForeignKey("ItemMasterId");
                });

            modelBuilder.Entity("Moms.Revenue.Core.Domain.Item.Models.ItemTypeSubType", b =>
                {
                    b.HasOne("Moms.Revenue.Core.Domain.Item.Models.ItemMaster", "ItemMaster")
                        .WithMany("ItemTypeSubTypes")
                        .HasForeignKey("ItemMasterId");

                    b.HasOne("Moms.Revenue.Core.Domain.Item.Models.ItemType", "ItemType")
                        .WithOne("ItemTypeSubType")
                        .HasForeignKey("Moms.Revenue.Core.Domain.Item.Models.ItemTypeSubType", "ItemTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
